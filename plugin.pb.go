// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Job represents a single job
type Job struct {
	UniqueId    uint32             `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Title       string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Dependson   []uint32           `protobuf:"varint,4,rep,packed,name=dependson,proto3" json:"dependson,omitempty"`
	Args        []*Argument        `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	Interaction *ManualInteraction `protobuf:"bytes,6,opt,name=interaction,proto3" json:"interaction,omitempty"`
	// Output of the finished job if any will be passed down to the
	// JobResult.
	Outs                 []*Output `protobuf:"bytes,7,rep,name=outs,proto3" json:"outs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *Job) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Job) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Job) GetDependson() []uint32 {
	if m != nil {
		return m.Dependson
	}
	return nil
}

func (m *Job) GetArgs() []*Argument {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Job) GetInteraction() *ManualInteraction {
	if m != nil {
		return m.Interaction
	}
	return nil
}

func (m *Job) GetOuts() []*Output {
	if m != nil {
		return m.Outs
	}
	return nil
}

// Argument represents an argument passed from a pipeline
// to gaia and/or from gaia to the pipeline.
// In addition, an argument can come from a previous job's
// output value.
type Argument struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Argument) Reset()         { *m = Argument{} }
func (m *Argument) String() string { return proto.CompactTextString(m) }
func (*Argument) ProtoMessage()    {}
func (*Argument) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{1}
}

func (m *Argument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Argument.Unmarshal(m, b)
}
func (m *Argument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Argument.Marshal(b, m, deterministic)
}
func (m *Argument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Argument.Merge(m, src)
}
func (m *Argument) XXX_Size() int {
	return xxx_messageInfo_Argument.Size(m)
}
func (m *Argument) XXX_DiscardUnknown() {
	xxx_messageInfo_Argument.DiscardUnknown(m)
}

var xxx_messageInfo_Argument proto.InternalMessageInfo

func (m *Argument) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Argument) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Argument) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Argument) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// ManualInteraction represents a manual human interaction
type ManualInteraction struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManualInteraction) Reset()         { *m = ManualInteraction{} }
func (m *ManualInteraction) String() string { return proto.CompactTextString(m) }
func (*ManualInteraction) ProtoMessage()    {}
func (*ManualInteraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{2}
}

func (m *ManualInteraction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManualInteraction.Unmarshal(m, b)
}
func (m *ManualInteraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManualInteraction.Marshal(b, m, deterministic)
}
func (m *ManualInteraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManualInteraction.Merge(m, src)
}
func (m *ManualInteraction) XXX_Size() int {
	return xxx_messageInfo_ManualInteraction.Size(m)
}
func (m *ManualInteraction) XXX_DiscardUnknown() {
	xxx_messageInfo_ManualInteraction.DiscardUnknown(m)
}

var xxx_messageInfo_ManualInteraction proto.InternalMessageInfo

func (m *ManualInteraction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ManualInteraction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ManualInteraction) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// JobResult represents the result of an executed job
type JobResult struct {
	UniqueId             uint32    `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Failed               bool      `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	ExitPipeline         bool      `protobuf:"varint,3,opt,name=exit_pipeline,json=exitPipeline,proto3" json:"exit_pipeline,omitempty"`
	Message              string    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Output               []*Output `protobuf:"bytes,5,rep,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JobResult) Reset()         { *m = JobResult{} }
func (m *JobResult) String() string { return proto.CompactTextString(m) }
func (*JobResult) ProtoMessage()    {}
func (*JobResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{3}
}

func (m *JobResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResult.Unmarshal(m, b)
}
func (m *JobResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResult.Marshal(b, m, deterministic)
}
func (m *JobResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResult.Merge(m, src)
}
func (m *JobResult) XXX_Size() int {
	return xxx_messageInfo_JobResult.Size(m)
}
func (m *JobResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResult.DiscardUnknown(m)
}

var xxx_messageInfo_JobResult proto.InternalMessageInfo

func (m *JobResult) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *JobResult) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *JobResult) GetExitPipeline() bool {
	if m != nil {
		return m.ExitPipeline
	}
	return false
}

func (m *JobResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *JobResult) GetOutput() []*Output {
	if m != nil {
		return m.Output
	}
	return nil
}

// Any output of a given job. This can include something like a generated DNS name
// in the form of:
// "DNS": "https://my-awesome-service.com/app"
// The output is a repeated key-value message. This output can be fed to the next
// job as an argument.
type Output struct {
	// Key of the output/
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the output.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{4}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Output) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Empty message
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a625af4bc1cc87, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Job)(nil), "proto.Job")
	proto.RegisterType((*Argument)(nil), "proto.Argument")
	proto.RegisterType((*ManualInteraction)(nil), "proto.ManualInteraction")
	proto.RegisterType((*JobResult)(nil), "proto.JobResult")
	proto.RegisterType((*Output)(nil), "proto.Output")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() { proto.RegisterFile("plugin.proto", fileDescriptor_22a625af4bc1cc87) }

var fileDescriptor_22a625af4bc1cc87 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x95, 0x97, 0x34, 0x6d, 0xbf, 0xb6, 0x62, 0x58, 0x80, 0xa2, 0xc1, 0x21, 0x74, 0xaa, 0x14,
	0x71, 0xa8, 0xa6, 0x72, 0xe3, 0xc6, 0xd0, 0x34, 0xad, 0x12, 0xa2, 0xf2, 0x95, 0x43, 0xe5, 0x34,
	0x1f, 0xc1, 0x22, 0xb5, 0x4d, 0x62, 0xa3, 0xf5, 0x0f, 0xf1, 0x2b, 0x39, 0xa0, 0xda, 0x0e, 0x8d,
	0x36, 0xc4, 0x81, 0x53, 0xbf, 0xf7, 0xde, 0xd7, 0x3c, 0xbf, 0x67, 0xc3, 0x54, 0xd7, 0xb6, 0x12,
	0x72, 0xa9, 0x1b, 0x65, 0x14, 0x1d, 0xb8, 0x9f, 0xf9, 0x2f, 0x02, 0xd1, 0x5a, 0x15, 0xf4, 0x25,
	0x8c, 0xad, 0x14, 0xdf, 0x2d, 0x6e, 0x45, 0x99, 0x92, 0x8c, 0xe4, 0x33, 0x36, 0xf2, 0xc4, 0x5d,
	0x49, 0x9f, 0xc1, 0xc0, 0x08, 0x53, 0x63, 0x7a, 0x96, 0x91, 0x7c, 0xcc, 0x3c, 0xa0, 0x19, 0x4c,
	0x4a, 0x6c, 0x77, 0x8d, 0xd0, 0x46, 0x28, 0x99, 0x46, 0x4e, 0xeb, 0x53, 0xf4, 0x15, 0x8c, 0x4b,
	0xd4, 0x28, 0xcb, 0x56, 0xc9, 0x34, 0xce, 0xa2, 0x7c, 0xc6, 0x4e, 0x04, 0xbd, 0x84, 0x98, 0x37,
	0x55, 0x9b, 0x0e, 0xb2, 0x28, 0x9f, 0xac, 0x9e, 0xf8, 0x73, 0x2d, 0xdf, 0x37, 0x95, 0xdd, 0xa3,
	0x34, 0xcc, 0x89, 0xf4, 0x1d, 0x4c, 0x84, 0x34, 0xd8, 0xf0, 0x9d, 0x33, 0x49, 0x32, 0x92, 0x4f,
	0x56, 0x69, 0xd8, 0xfd, 0xc8, 0xa5, 0xe5, 0xf5, 0xdd, 0x49, 0x67, 0xfd, 0x65, 0xfa, 0x1a, 0x62,
	0x65, 0x4d, 0x9b, 0x0e, 0x9d, 0xc1, 0x2c, 0xfc, 0xe9, 0x93, 0x35, 0xda, 0x1a, 0xe6, 0xa4, 0xf9,
	0x57, 0x18, 0x75, 0x86, 0x0f, 0xf3, 0x90, 0xc7, 0x79, 0x28, 0xc4, 0xe6, 0xa0, 0xbb, 0x1a, 0xdc,
	0x4c, 0xcf, 0x21, 0xfa, 0x86, 0x87, 0x90, 0xfe, 0x38, 0x1e, 0xdb, 0xfa, 0xc1, 0x6b, 0x8b, 0x69,
	0xec, 0xdb, 0x72, 0x60, 0xbe, 0x85, 0xa7, 0x8f, 0x8e, 0xfb, 0x9f, 0x96, 0x7f, 0x0c, 0xa2, 0xbe,
	0xc1, 0x4f, 0x02, 0xe3, 0xb5, 0x2a, 0x18, 0xb6, 0xb6, 0x36, 0xff, 0xbe, 0xcf, 0x17, 0x90, 0x7c,
	0xe1, 0xa2, 0xc6, 0xd2, 0x7d, 0x76, 0xc4, 0x02, 0xa2, 0x97, 0x30, 0xc3, 0x7b, 0x61, 0xb6, 0x5a,
	0x68, 0xac, 0x85, 0xf4, 0x06, 0x23, 0x36, 0x3d, 0x92, 0x9b, 0xc0, 0xd1, 0x14, 0x86, 0x7b, 0x6c,
	0x5b, 0x5e, 0x75, 0x01, 0x3b, 0x48, 0x17, 0x90, 0x28, 0x57, 0x6e, 0xb8, 0xd2, 0x07, 0x8d, 0x07,
	0x71, 0x7e, 0x05, 0x89, 0x67, 0xba, 0xee, 0xc8, 0x5f, 0xba, 0x3b, 0xeb, 0x47, 0x1b, 0xc2, 0xe0,
	0x66, 0xaf, 0xcd, 0x61, 0xf5, 0x19, 0x92, 0x8d, 0x7b, 0xc4, 0x74, 0x01, 0xc3, 0x5b, 0x34, 0x6b,
	0x55, 0xb4, 0x74, 0x1a, 0x6c, 0xdc, 0xca, 0x05, 0x04, 0xb4, 0x56, 0xc5, 0x15, 0xa1, 0x6f, 0x00,
	0x6e, 0xee, 0x71, 0x67, 0x0d, 0x1e, 0x1f, 0x79, 0x4f, 0xbb, 0x38, 0x3f, 0xcd, 0xbe, 0xb2, 0xeb,
	0x05, 0x3c, 0x17, 0x6a, 0x59, 0x71, 0xc1, 0xbb, 0xfc, 0x7e, 0xe5, 0x1a, 0x6e, 0xd9, 0xe6, 0x83,
	0xf7, 0xdd, 0x90, 0x22, 0x71, 0xe4, 0xdb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x98, 0xed, 0xf5,
	0xb4, 0x4f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PluginClient is the client API for Plugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginClient interface {
	// GetJobs returns a stream of Job objects.
	// Used to expose jobs to gaia.
	GetJobs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Plugin_GetJobsClient, error)
	// ExecuteJob signals the plugin to execute the given job.
	// Used to execute one job from a pipeline.
	ExecuteJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*JobResult, error)
}

type pluginClient struct {
	cc *grpc.ClientConn
}

func NewPluginClient(cc *grpc.ClientConn) PluginClient {
	return &pluginClient{cc}
}

func (c *pluginClient) GetJobs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Plugin_GetJobsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Plugin_serviceDesc.Streams[0], "/proto.Plugin/GetJobs", opts...)
	if err != nil {
		return nil, err
	}
	x := &pluginGetJobsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Plugin_GetJobsClient interface {
	Recv() (*Job, error)
	grpc.ClientStream
}

type pluginGetJobsClient struct {
	grpc.ClientStream
}

func (x *pluginGetJobsClient) Recv() (*Job, error) {
	m := new(Job)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pluginClient) ExecuteJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*JobResult, error) {
	out := new(JobResult)
	err := c.cc.Invoke(ctx, "/proto.Plugin/ExecuteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginServer is the server API for Plugin service.
type PluginServer interface {
	// GetJobs returns a stream of Job objects.
	// Used to expose jobs to gaia.
	GetJobs(*Empty, Plugin_GetJobsServer) error
	// ExecuteJob signals the plugin to execute the given job.
	// Used to execute one job from a pipeline.
	ExecuteJob(context.Context, *Job) (*JobResult, error)
}

// UnimplementedPluginServer can be embedded to have forward compatible implementations.
type UnimplementedPluginServer struct {
}

func (*UnimplementedPluginServer) GetJobs(req *Empty, srv Plugin_GetJobsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetJobs not implemented")
}
func (*UnimplementedPluginServer) ExecuteJob(ctx context.Context, req *Job) (*JobResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteJob not implemented")
}

func RegisterPluginServer(s *grpc.Server, srv PluginServer) {
	s.RegisterService(&_Plugin_serviceDesc, srv)
}

func _Plugin_GetJobs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PluginServer).GetJobs(m, &pluginGetJobsServer{stream})
}

type Plugin_GetJobsServer interface {
	Send(*Job) error
	grpc.ServerStream
}

type pluginGetJobsServer struct {
	grpc.ServerStream
}

func (x *pluginGetJobsServer) Send(m *Job) error {
	return x.ServerStream.SendMsg(m)
}

func _Plugin_ExecuteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).ExecuteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/ExecuteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).ExecuteJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Plugin",
	HandlerType: (*PluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteJob",
			Handler:    _Plugin_ExecuteJob_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetJobs",
			Handler:       _Plugin_GetJobs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "plugin.proto",
}
